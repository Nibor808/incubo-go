#proxy_cache_path /data/nginx/cache levels=1:2 keys_zone=my_cache:10m max_size=1g inactive=60m use_temp_path=off;

upstream client {
  server client:3000;
  #keepalive 256;
}

upstream api {
  server api:5000;
  #keepalive 256;
}

server {
  listen 80;
  return 301 https://$http_host$request_uri;
}

server {
  listen 8443;

  location / {
    proxy_pass http://client;

    # proxy_cache my_cache;
    # proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
    # proxy_cache_background_update on;
    # proxy_cache_lock on;

    # proxy_set_header        Host            $host;
    # proxy_set_header        X-Real-IP       $remote_addr;
    # proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  # gzip on;
  # gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript font/ttf;

  # setup websocket connection for react dev server
  location /sockjs-node {
    proxy_pass http://client;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
  }

  location /api {
    # strip off the /api from the request
    rewrite /api/(.*) /$1 break;

    proxy_pass http://api;
  }
}
