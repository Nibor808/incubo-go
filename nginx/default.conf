proxy_cache_path /data/nginx/cache levels=1:2 keys_zone=my_cache:10m max_size=1g inactive=60m use_temp_path=off;

upstream client {
  server client:3000;
}

upstream api {
  server api:5000;
}

server {
  listen 443;

  auth_basic "Site Access";
  auth_basic_user_file /etc/nginx/conf.d/.htpasswd;

  gzip on;
  gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript font/ttf;

  location / {
    proxy_pass http://client;

    proxy_http_version    1.1;

    proxy_cache my_cache;
    proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
    proxy_cache_background_update on;
    proxy_cache_lock on;

    proxy_set_header        Connection        "";
    proxy_set_header        Upgrade           $http_upgrade;
    proxy_set_header        Host              $host;
    proxy_set_header        X-Real-IP         $remote_addr;
    proxy_set_header        X-Forwarded-For   $proxy_add_x_forwarded_for;
  }

  location /api {
    # strip off the /api from the request
    rewrite /api/(.*) /$1 break;

    proxy_pass http://api;
  }
}

server {
  listen 80;

  location / {
    set $redirect 0;
    if ($http_x_forwarded_proto != "https") {
      set $redirect 1;
    }
    if ($http_user_agent ~* "ELB-HealthChecker") {
      set $redirect 0;
    }
    if ($redirect = 1) {
      return 301 https://$host$request_uri;
    }

    proxy_pass http://client;
  }
}
