proxy_cache_path /data/nginx/cache levels=1:2 keys_zone=my_cache:10m max_size=1g inactive=60m use_temp_path=off;

upstream client {
  server client:3000;
}

upstream api {
  server api:5000;
}

gzip on;
gzip_min_length 1000;
gzip_proxied no-cache no-store private expired auth;
gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript font/ttf;

server {
  listen 443;

  location / {
    proxy_pass http://client;

    # proxy_cache my_cache;
    # proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
    # proxy_cache_background_update on;
    # proxy_cache_lock on;

    #   if ($request_method = "OPTIONS") {
  #     proxy_set_header "Access-Control-Allow-Origin" "*";
  #     proxy_set_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS";
  #     #
  #     # Custom headers and headers various browsers *should* be OK with but aren"t
  #     #
  #     proxy_set_header "Access-Control-Allow-Headers" "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
  #     #
  #     # Tell client that this pre-flight info is valid for 20 days
  #     #
  #     proxy_set_header "Access-Control-Max-Age" 1728000;
  #     proxy_set_header "Content-Type" "text/plain; charset=utf-8";
  #     proxy_set_header "Content-Length" 0;
  #     return 204;
  #   }
  #   if ($request_method = "POST") {
  #     proxy_set_header "Access-Control-Allow-Origin" "*";
  #     proxy_set_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS";
  #     proxy_set_header "Access-Control-Allow-Headers" "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
  #     proxy_set_header "Access-Control-Expose-Headers" "Content-Length,Content-Range";
  #   }

    proxy_set_header   MyTestHeaderClientNew "testClientNew2;
    proxy_set_header   Host $host;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  location /api {
    # strip off the /api from the request
    rewrite /api/(.*) /$1 break;

    proxy_pass http://api;
    proxy_set_header        MyHeaderApi443                      "testapi44312";
  }
}

server {
  listen 80;

  location /healthcheck {
    proxy_pass http://client;
  }

  location / {
    if ($http_x_forwarded_proto = 'http'){
      return 301 https://$host$request_uri;
    }

    proxy_pass http://client;
  }
}
